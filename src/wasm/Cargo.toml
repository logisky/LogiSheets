[package]
authors = ["Jiangming He"]
edition = "2018"
name = "logisheets_wasm"
version = "0.1.0"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
lazy_static = "1.4.0"
wasm-bindgen = {version = "0.2.79", features = ["serde-serialize"]}
# Specify the feature of the crate used in `xlrs_controller`.
getrandom = {version = "0.2.3", features = ["js"]}
serde = {version = "1.0.125", features = ["derive"]}
serde_json = "1.0.59"
xlrs_controller = {versoin = "0.1.0", path = '../../controller'}

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = {version = "0.1.6", optional = true}

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = {version = "0.4.5", optional = true}

[dev-dependencies]
wasm-bindgen-test = "0.3.13"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"

# `wasm-opt` is on by default in for the release profile, but it can be
# disabled by setting it to `false`
[package.metadata.wasm-pack.profile.release]
wasm-opt = false
